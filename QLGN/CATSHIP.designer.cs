#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLGN
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CATSHIP")]
	public partial class CATSHIPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCAIDAT(CAIDAT instance);
    partial void UpdateCAIDAT(CAIDAT instance);
    partial void DeleteCAIDAT(CAIDAT instance);
    partial void InsertTHONGKE(THONGKE instance);
    partial void UpdateTHONGKE(THONGKE instance);
    partial void DeleteTHONGKE(THONGKE instance);
    partial void InsertDEM(DEM instance);
    partial void UpdateDEM(DEM instance);
    partial void DeleteDEM(DEM instance);
    partial void InsertDONHANG(DONHANG instance);
    partial void UpdateDONHANG(DONHANG instance);
    partial void DeleteDONHANG(DONHANG instance);
    partial void InsertHANG(HANG instance);
    partial void UpdateHANG(HANG instance);
    partial void DeleteHANG(HANG instance);
    partial void InsertNGUOIGUI(NGUOIGUI instance);
    partial void UpdateNGUOIGUI(NGUOIGUI instance);
    partial void DeleteNGUOIGUI(NGUOIGUI instance);
    partial void InsertNGUOINHAN(NGUOINHAN instance);
    partial void UpdateNGUOINHAN(NGUOINHAN instance);
    partial void DeleteNGUOINHAN(NGUOINHAN instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHIGH(PHIGH instance);
    partial void UpdatePHIGH(PHIGH instance);
    partial void DeletePHIGH(PHIGH instance);
    partial void InsertPHUONGTIEN(PHUONGTIEN instance);
    partial void UpdatePHUONGTIEN(PHUONGTIEN instance);
    partial void DeletePHUONGTIEN(PHUONGTIEN instance);
    partial void InsertSHIPPER(SHIPPER instance);
    partial void UpdateSHIPPER(SHIPPER instance);
    partial void DeleteSHIPPER(SHIPPER instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertTHONGBAO(THONGBAO instance);
    partial void UpdateTHONGBAO(THONGBAO instance);
    partial void DeleteTHONGBAO(THONGBAO instance);
    #endregion
		
		public CATSHIPDataContext() : 
				base(global::QLGN.Properties.Settings.Default.CATSHIPConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public CATSHIPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CATSHIPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CATSHIPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CATSHIPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CAIDAT> CAIDATs
		{
			get
			{
				return this.GetTable<CAIDAT>();
			}
		}
		
		public System.Data.Linq.Table<THONGKE> THONGKEs
		{
			get
			{
				return this.GetTable<THONGKE>();
			}
		}
		
		public System.Data.Linq.Table<DEM> DEMs
		{
			get
			{
				return this.GetTable<DEM>();
			}
		}
		
		public System.Data.Linq.Table<DONHANG> DONHANGs
		{
			get
			{
				return this.GetTable<DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<HANG> HANGs
		{
			get
			{
				return this.GetTable<HANG>();
			}
		}
		
		public System.Data.Linq.Table<NGUOIGUI> NGUOIGUIs
		{
			get
			{
				return this.GetTable<NGUOIGUI>();
			}
		}
		
		public System.Data.Linq.Table<NGUOINHAN> NGUOINHANs
		{
			get
			{
				return this.GetTable<NGUOINHAN>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIGH> PHIGHs
		{
			get
			{
				return this.GetTable<PHIGH>();
			}
		}
		
		public System.Data.Linq.Table<PHUONGTIEN> PHUONGTIENs
		{
			get
			{
				return this.GetTable<PHUONGTIEN>();
			}
		}
		
		public System.Data.Linq.Table<SHIPPER> SHIPPERs
		{
			get
			{
				return this.GetTable<SHIPPER>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<THONGBAO> THONGBAOs
		{
			get
			{
				return this.GetTable<THONGBAO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAIDAT")]
	public partial class CAIDAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private bool _SETUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSETUPChanging(bool value);
    partial void OnSETUPChanged();
    #endregion
		
		public CAIDAT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SETUP", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool SETUP
		{
			get
			{
				return this._SETUP;
			}
			set
			{
				if ((this._SETUP != value))
				{
					this.OnSETUPChanging(value);
					this.SendPropertyChanging();
					this._SETUP = value;
					this.SendPropertyChanged("SETUP");
					this.OnSETUPChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONGKE")]
	public partial class THONGKE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NGAY;
		
		private System.Nullable<int> _SOLUONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNGAYChanging(int value);
    partial void OnNGAYChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public THONGKE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NGAY
		{
			get
			{
				return this._NGAY;
			}
			set
			{
				if ((this._NGAY != value))
				{
					this.OnNGAYChanging(value);
					this.SendPropertyChanging();
					this._NGAY = value;
					this.SendPropertyChanged("NGAY");
					this.OnNGAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEM")]
	public partial class DEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<int> _COUNT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCOUNTChanging(System.Nullable<int> value);
    partial void OnCOUNTChanged();
    #endregion
		
		public DEM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNT", DbType="Int")]
		public System.Nullable<int> COUNT
		{
			get
			{
				return this._COUNT;
			}
			set
			{
				if ((this._COUNT != value))
				{
					this.OnCOUNTChanging(value);
					this.SendPropertyChanging();
					this._COUNT = value;
					this.SendPropertyChanged("COUNT");
					this.OnCOUNTChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANG")]
	public partial class DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADH;
		
		private string _MANV;
		
		private string _CMNDNG;
		
		private string _CMNDNN;
		
		private System.DateTime _NGAYGUI;
		
		private string _MAHANG;
		
		private string _MAPHI;
		
		private string _TTHD;
		
		private EntityRef<HANG> _HANG;
		
		private EntityRef<NGUOIGUI> _NGUOIGUI;
		
		private EntityRef<NGUOINHAN> _NGUOINHAN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<PHIGH> _PHIGH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADHChanging(string value);
    partial void OnMADHChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnCMNDNGChanging(string value);
    partial void OnCMNDNGChanged();
    partial void OnCMNDNNChanging(string value);
    partial void OnCMNDNNChanged();
    partial void OnNGAYGUIChanging(System.DateTime value);
    partial void OnNGAYGUIChanged();
    partial void OnMAHANGChanging(string value);
    partial void OnMAHANGChanged();
    partial void OnMAPHIChanging(string value);
    partial void OnMAPHIChanged();
    partial void OnTTHDChanging(string value);
    partial void OnTTHDChanged();
    #endregion
		
		public DONHANG()
		{
			this._HANG = default(EntityRef<HANG>);
			this._NGUOIGUI = default(EntityRef<NGUOIGUI>);
			this._NGUOINHAN = default(EntityRef<NGUOINHAN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._PHIGH = default(EntityRef<PHIGH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMNDNG", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CMNDNG
		{
			get
			{
				return this._CMNDNG;
			}
			set
			{
				if ((this._CMNDNG != value))
				{
					if (this._NGUOIGUI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCMNDNGChanging(value);
					this.SendPropertyChanging();
					this._CMNDNG = value;
					this.SendPropertyChanged("CMNDNG");
					this.OnCMNDNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMNDNN", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CMNDNN
		{
			get
			{
				return this._CMNDNN;
			}
			set
			{
				if ((this._CMNDNN != value))
				{
					if (this._NGUOINHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCMNDNNChanging(value);
					this.SendPropertyChanging();
					this._CMNDNN = value;
					this.SendPropertyChanged("CMNDNN");
					this.OnCMNDNNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGUI", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYGUI
		{
			get
			{
				return this._NGAYGUI;
			}
			set
			{
				if ((this._NGAYGUI != value))
				{
					this.OnNGAYGUIChanging(value);
					this.SendPropertyChanging();
					this._NGAYGUI = value;
					this.SendPropertyChanged("NGAYGUI");
					this.OnNGAYGUIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANG", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MAHANG
		{
			get
			{
				return this._MAHANG;
			}
			set
			{
				if ((this._MAHANG != value))
				{
					if (this._HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHANGChanging(value);
					this.SendPropertyChanging();
					this._MAHANG = value;
					this.SendPropertyChanged("MAHANG");
					this.OnMAHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHI", DbType="VarChar(100)")]
		public string MAPHI
		{
			get
			{
				return this._MAPHI;
			}
			set
			{
				if ((this._MAPHI != value))
				{
					if (this._PHIGH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIChanging(value);
					this.SendPropertyChanging();
					this._MAPHI = value;
					this.SendPropertyChanged("MAPHI");
					this.OnMAPHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTHD", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TTHD
		{
			get
			{
				return this._TTHD;
			}
			set
			{
				if ((this._TTHD != value))
				{
					this.OnTTHDChanging(value);
					this.SendPropertyChanging();
					this._TTHD = value;
					this.SendPropertyChanged("TTHD");
					this.OnTTHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_DONHANG", Storage="_HANG", ThisKey="MAHANG", OtherKey="MAHANG", IsForeignKey=true)]
		public HANG HANG
		{
			get
			{
				return this._HANG.Entity;
			}
			set
			{
				HANG previousValue = this._HANG.Entity;
				if (((previousValue != value) 
							|| (this._HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANG.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._HANG.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._MAHANG = value.MAHANG;
					}
					else
					{
						this._MAHANG = default(string);
					}
					this.SendPropertyChanged("HANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIGUI_DONHANG", Storage="_NGUOIGUI", ThisKey="CMNDNG", OtherKey="CMND", IsForeignKey=true)]
		public NGUOIGUI NGUOIGUI
		{
			get
			{
				return this._NGUOIGUI.Entity;
			}
			set
			{
				NGUOIGUI previousValue = this._NGUOIGUI.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIGUI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIGUI.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._NGUOIGUI.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._CMNDNG = value.CMND;
					}
					else
					{
						this._CMNDNG = default(string);
					}
					this.SendPropertyChanged("NGUOIGUI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOINHAN_DONHANG", Storage="_NGUOINHAN", ThisKey="CMNDNN", OtherKey="CMND", IsForeignKey=true)]
		public NGUOINHAN NGUOINHAN
		{
			get
			{
				return this._NGUOINHAN.Entity;
			}
			set
			{
				NGUOINHAN previousValue = this._NGUOINHAN.Entity;
				if (((previousValue != value) 
							|| (this._NGUOINHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOINHAN.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._NGUOINHAN.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._CMNDNN = value.CMND;
					}
					else
					{
						this._CMNDNN = default(string);
					}
					this.SendPropertyChanged("NGUOINHAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_DONHANG", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIGH_DONHANG", Storage="_PHIGH", ThisKey="MAPHI", OtherKey="MAPHI", IsForeignKey=true)]
		public PHIGH PHIGH
		{
			get
			{
				return this._PHIGH.Entity;
			}
			set
			{
				PHIGH previousValue = this._PHIGH.Entity;
				if (((previousValue != value) 
							|| (this._PHIGH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIGH.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._PHIGH.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._MAPHI = value.MAPHI;
					}
					else
					{
						this._MAPHI = default(string);
					}
					this.SendPropertyChanged("PHIGH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANG")]
	public partial class HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHANG;
		
		private double _TRONGLUONG;
		
		private double _DAI;
		
		private double _RONG;
		
		private double _CAO;
		
		private string _NOIDUNG;
		
		private string _GHICHU;
		
		private EntitySet<DONHANG> _DONHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHANGChanging(string value);
    partial void OnMAHANGChanged();
    partial void OnTRONGLUONGChanging(double value);
    partial void OnTRONGLUONGChanged();
    partial void OnDAIChanging(double value);
    partial void OnDAIChanged();
    partial void OnRONGChanging(double value);
    partial void OnRONGChanged();
    partial void OnCAOChanging(double value);
    partial void OnCAOChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    #endregion
		
		public HANG()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANG", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHANG
		{
			get
			{
				return this._MAHANG;
			}
			set
			{
				if ((this._MAHANG != value))
				{
					this.OnMAHANGChanging(value);
					this.SendPropertyChanging();
					this._MAHANG = value;
					this.SendPropertyChanged("MAHANG");
					this.OnMAHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRONGLUONG", DbType="Float NOT NULL")]
		public double TRONGLUONG
		{
			get
			{
				return this._TRONGLUONG;
			}
			set
			{
				if ((this._TRONGLUONG != value))
				{
					this.OnTRONGLUONGChanging(value);
					this.SendPropertyChanging();
					this._TRONGLUONG = value;
					this.SendPropertyChanged("TRONGLUONG");
					this.OnTRONGLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAI", DbType="Float NOT NULL")]
		public double DAI
		{
			get
			{
				return this._DAI;
			}
			set
			{
				if ((this._DAI != value))
				{
					this.OnDAIChanging(value);
					this.SendPropertyChanging();
					this._DAI = value;
					this.SendPropertyChanged("DAI");
					this.OnDAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RONG", DbType="Float NOT NULL")]
		public double RONG
		{
			get
			{
				return this._RONG;
			}
			set
			{
				if ((this._RONG != value))
				{
					this.OnRONGChanging(value);
					this.SendPropertyChanging();
					this._RONG = value;
					this.SendPropertyChanged("RONG");
					this.OnRONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAO", DbType="Float NOT NULL")]
		public double CAO
		{
			get
			{
				return this._CAO;
			}
			set
			{
				if ((this._CAO != value))
				{
					this.OnCAOChanging(value);
					this.SendPropertyChanging();
					this._CAO = value;
					this.SendPropertyChanged("CAO");
					this.OnCAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(500)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_DONHANG", Storage="_DONHANGs", ThisKey="MAHANG", OtherKey="MAHANG")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.HANG = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.HANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUOIGUI")]
	public partial class NGUOIGUI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CMND;
		
		private string _HOTEN;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private EntitySet<DONHANG> _DONHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NGUOIGUI()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(100)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIGUI_DONHANG", Storage="_DONHANGs", ThisKey="CMND", OtherKey="CMNDNG")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIGUI = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIGUI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUOINHAN")]
	public partial class NGUOINHAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CMND;
		
		private string _HOTEN;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private EntitySet<DONHANG> _DONHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NGUOINHAN()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(100)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOINHAN_DONHANG", Storage="_DONHANGs", ThisKey="CMND", OtherKey="CMNDNN")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOINHAN = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOINHAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _TEN;
		
		private System.DateTime _NGAYSINH;
		
		private string _QUEQUAN;
		
		private string _SDTNV;
		
		private EntitySet<DONHANG> _DONHANGs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnNGAYSINHChanging(System.DateTime value);
    partial void OnNGAYSINHChanged();
    partial void OnQUEQUANChanging(string value);
    partial void OnQUEQUANChanged();
    partial void OnSDTNVChanging(string value);
    partial void OnSDTNVChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUEQUAN", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string QUEQUAN
		{
			get
			{
				return this._QUEQUAN;
			}
			set
			{
				if ((this._QUEQUAN != value))
				{
					this.OnQUEQUANChanging(value);
					this.SendPropertyChanging();
					this._QUEQUAN = value;
					this.SendPropertyChanged("QUEQUAN");
					this.OnQUEQUANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTNV", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string SDTNV
		{
			get
			{
				return this._SDTNV;
			}
			set
			{
				if ((this._SDTNV != value))
				{
					this.OnSDTNVChanging(value);
					this.SendPropertyChanging();
					this._SDTNV = value;
					this.SendPropertyChanged("SDTNV");
					this.OnSDTNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_DONHANG", Storage="_DONHANGs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_TAIKHOAN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.NHANVIEN = null;
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIEN = this;
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIGH")]
	public partial class PHIGH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHI;
		
		private string _MASHIPPER;
		
		private System.Nullable<double> _PHUPHI;
		
		private double _TONGPHI;
		
		private string _TTPHI;
		
		private string _MAPT;
		
		private EntitySet<DONHANG> _DONHANGs;
		
		private EntityRef<PHUONGTIEN> _PHUONGTIEN;
		
		private EntityRef<SHIPPER> _SHIPPER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIChanging(string value);
    partial void OnMAPHIChanged();
    partial void OnMASHIPPERChanging(string value);
    partial void OnMASHIPPERChanged();
    partial void OnPHUPHIChanging(System.Nullable<double> value);
    partial void OnPHUPHIChanged();
    partial void OnTONGPHIChanging(double value);
    partial void OnTONGPHIChanged();
    partial void OnTTPHIChanging(string value);
    partial void OnTTPHIChanged();
    partial void OnMAPTChanging(string value);
    partial void OnMAPTChanged();
    #endregion
		
		public PHIGH()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			this._PHUONGTIEN = default(EntityRef<PHUONGTIEN>);
			this._SHIPPER = default(EntityRef<SHIPPER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHI", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHI
		{
			get
			{
				return this._MAPHI;
			}
			set
			{
				if ((this._MAPHI != value))
				{
					this.OnMAPHIChanging(value);
					this.SendPropertyChanging();
					this._MAPHI = value;
					this.SendPropertyChanged("MAPHI");
					this.OnMAPHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASHIPPER", DbType="VarChar(100)")]
		public string MASHIPPER
		{
			get
			{
				return this._MASHIPPER;
			}
			set
			{
				if ((this._MASHIPPER != value))
				{
					if (this._SHIPPER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASHIPPERChanging(value);
					this.SendPropertyChanging();
					this._MASHIPPER = value;
					this.SendPropertyChanged("MASHIPPER");
					this.OnMASHIPPERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHUPHI", DbType="Float")]
		public System.Nullable<double> PHUPHI
		{
			get
			{
				return this._PHUPHI;
			}
			set
			{
				if ((this._PHUPHI != value))
				{
					this.OnPHUPHIChanging(value);
					this.SendPropertyChanging();
					this._PHUPHI = value;
					this.SendPropertyChanged("PHUPHI");
					this.OnPHUPHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGPHI", DbType="Float NOT NULL")]
		public double TONGPHI
		{
			get
			{
				return this._TONGPHI;
			}
			set
			{
				if ((this._TONGPHI != value))
				{
					this.OnTONGPHIChanging(value);
					this.SendPropertyChanging();
					this._TONGPHI = value;
					this.SendPropertyChanged("TONGPHI");
					this.OnTONGPHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTPHI", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TTPHI
		{
			get
			{
				return this._TTPHI;
			}
			set
			{
				if ((this._TTPHI != value))
				{
					this.OnTTPHIChanging(value);
					this.SendPropertyChanging();
					this._TTPHI = value;
					this.SendPropertyChanged("TTPHI");
					this.OnTTPHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPT", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MAPT
		{
			get
			{
				return this._MAPT;
			}
			set
			{
				if ((this._MAPT != value))
				{
					if (this._PHUONGTIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPTChanging(value);
					this.SendPropertyChanging();
					this._MAPT = value;
					this.SendPropertyChanged("MAPT");
					this.OnMAPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIGH_DONHANG", Storage="_DONHANGs", ThisKey="MAPHI", OtherKey="MAPHI")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUONGTIEN_PHIGH", Storage="_PHUONGTIEN", ThisKey="MAPT", OtherKey="MAPT", IsForeignKey=true)]
		public PHUONGTIEN PHUONGTIEN
		{
			get
			{
				return this._PHUONGTIEN.Entity;
			}
			set
			{
				PHUONGTIEN previousValue = this._PHUONGTIEN.Entity;
				if (((previousValue != value) 
							|| (this._PHUONGTIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHUONGTIEN.Entity = null;
						previousValue.PHIGHs.Remove(this);
					}
					this._PHUONGTIEN.Entity = value;
					if ((value != null))
					{
						value.PHIGHs.Add(this);
						this._MAPT = value.MAPT;
					}
					else
					{
						this._MAPT = default(string);
					}
					this.SendPropertyChanged("PHUONGTIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SHIPPER_PHIGH", Storage="_SHIPPER", ThisKey="MASHIPPER", OtherKey="MASHIPPER", IsForeignKey=true)]
		public SHIPPER SHIPPER
		{
			get
			{
				return this._SHIPPER.Entity;
			}
			set
			{
				SHIPPER previousValue = this._SHIPPER.Entity;
				if (((previousValue != value) 
							|| (this._SHIPPER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SHIPPER.Entity = null;
						previousValue.PHIGHs.Remove(this);
					}
					this._SHIPPER.Entity = value;
					if ((value != null))
					{
						value.PHIGHs.Add(this);
						this._MASHIPPER = value.MASHIPPER;
					}
					else
					{
						this._MASHIPPER = default(string);
					}
					this.SendPropertyChanged("SHIPPER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.PHIGH = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.PHIGH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHUONGTIEN")]
	public partial class PHUONGTIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPT;
		
		private string _TENPT;
		
		private double _PHIPT;
		
		private EntitySet<PHIGH> _PHIGHs;
		
		private EntitySet<SHIPPER> _SHIPPERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPTChanging(string value);
    partial void OnMAPTChanged();
    partial void OnTENPTChanging(string value);
    partial void OnTENPTChanged();
    partial void OnPHIPTChanging(double value);
    partial void OnPHIPTChanged();
    #endregion
		
		public PHUONGTIEN()
		{
			this._PHIGHs = new EntitySet<PHIGH>(new Action<PHIGH>(this.attach_PHIGHs), new Action<PHIGH>(this.detach_PHIGHs));
			this._SHIPPERs = new EntitySet<SHIPPER>(new Action<SHIPPER>(this.attach_SHIPPERs), new Action<SHIPPER>(this.detach_SHIPPERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPT", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPT
		{
			get
			{
				return this._MAPT;
			}
			set
			{
				if ((this._MAPT != value))
				{
					this.OnMAPTChanging(value);
					this.SendPropertyChanging();
					this._MAPT = value;
					this.SendPropertyChanged("MAPT");
					this.OnMAPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPT", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENPT
		{
			get
			{
				return this._TENPT;
			}
			set
			{
				if ((this._TENPT != value))
				{
					this.OnTENPTChanging(value);
					this.SendPropertyChanging();
					this._TENPT = value;
					this.SendPropertyChanged("TENPT");
					this.OnTENPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHIPT", DbType="Float NOT NULL")]
		public double PHIPT
		{
			get
			{
				return this._PHIPT;
			}
			set
			{
				if ((this._PHIPT != value))
				{
					this.OnPHIPTChanging(value);
					this.SendPropertyChanging();
					this._PHIPT = value;
					this.SendPropertyChanged("PHIPT");
					this.OnPHIPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUONGTIEN_PHIGH", Storage="_PHIGHs", ThisKey="MAPT", OtherKey="MAPT")]
		public EntitySet<PHIGH> PHIGHs
		{
			get
			{
				return this._PHIGHs;
			}
			set
			{
				this._PHIGHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUONGTIEN_SHIPPER", Storage="_SHIPPERs", ThisKey="MAPT", OtherKey="MAPT")]
		public EntitySet<SHIPPER> SHIPPERs
		{
			get
			{
				return this._SHIPPERs;
			}
			set
			{
				this._SHIPPERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIGHs(PHIGH entity)
		{
			this.SendPropertyChanging();
			entity.PHUONGTIEN = this;
		}
		
		private void detach_PHIGHs(PHIGH entity)
		{
			this.SendPropertyChanging();
			entity.PHUONGTIEN = null;
		}
		
		private void attach_SHIPPERs(SHIPPER entity)
		{
			this.SendPropertyChanging();
			entity.PHUONGTIEN = this;
		}
		
		private void detach_SHIPPERs(SHIPPER entity)
		{
			this.SendPropertyChanging();
			entity.PHUONGTIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SHIPPER")]
	public partial class SHIPPER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASHIPPER;
		
		private string _TEN;
		
		private string _BSX;
		
		private string _SDT;
		
		private string _MAPT;
		
		private EntitySet<PHIGH> _PHIGHs;
		
		private EntityRef<PHUONGTIEN> _PHUONGTIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASHIPPERChanging(string value);
    partial void OnMASHIPPERChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnBSXChanging(string value);
    partial void OnBSXChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnMAPTChanging(string value);
    partial void OnMAPTChanged();
    #endregion
		
		public SHIPPER()
		{
			this._PHIGHs = new EntitySet<PHIGH>(new Action<PHIGH>(this.attach_PHIGHs), new Action<PHIGH>(this.detach_PHIGHs));
			this._PHUONGTIEN = default(EntityRef<PHUONGTIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASHIPPER", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASHIPPER
		{
			get
			{
				return this._MASHIPPER;
			}
			set
			{
				if ((this._MASHIPPER != value))
				{
					this.OnMASHIPPERChanging(value);
					this.SendPropertyChanging();
					this._MASHIPPER = value;
					this.SendPropertyChanged("MASHIPPER");
					this.OnMASHIPPERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSX", DbType="VarChar(50)")]
		public string BSX
		{
			get
			{
				return this._BSX;
			}
			set
			{
				if ((this._BSX != value))
				{
					this.OnBSXChanging(value);
					this.SendPropertyChanging();
					this._BSX = value;
					this.SendPropertyChanged("BSX");
					this.OnBSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPT", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MAPT
		{
			get
			{
				return this._MAPT;
			}
			set
			{
				if ((this._MAPT != value))
				{
					if (this._PHUONGTIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPTChanging(value);
					this.SendPropertyChanging();
					this._MAPT = value;
					this.SendPropertyChanged("MAPT");
					this.OnMAPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SHIPPER_PHIGH", Storage="_PHIGHs", ThisKey="MASHIPPER", OtherKey="MASHIPPER")]
		public EntitySet<PHIGH> PHIGHs
		{
			get
			{
				return this._PHIGHs;
			}
			set
			{
				this._PHIGHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUONGTIEN_SHIPPER", Storage="_PHUONGTIEN", ThisKey="MAPT", OtherKey="MAPT", IsForeignKey=true)]
		public PHUONGTIEN PHUONGTIEN
		{
			get
			{
				return this._PHUONGTIEN.Entity;
			}
			set
			{
				PHUONGTIEN previousValue = this._PHUONGTIEN.Entity;
				if (((previousValue != value) 
							|| (this._PHUONGTIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHUONGTIEN.Entity = null;
						previousValue.SHIPPERs.Remove(this);
					}
					this._PHUONGTIEN.Entity = value;
					if ((value != null))
					{
						value.SHIPPERs.Add(this);
						this._MAPT = value.MAPT;
					}
					else
					{
						this._MAPT = default(string);
					}
					this.SendPropertyChanged("PHUONGTIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIGHs(PHIGH entity)
		{
			this.SendPropertyChanging();
			entity.SHIPPER = this;
		}
		
		private void detach_PHIGHs(PHIGH entity)
		{
			this.SendPropertyChanging();
			entity.SHIPPER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _MATKHAU;
		
		private bool _ADM;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnADMChanging(bool value);
    partial void OnADMChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADM", DbType="Bit NOT NULL")]
		public bool ADM
		{
			get
			{
				return this._ADM;
			}
			set
			{
				if ((this._ADM != value))
				{
					this.OnADMChanging(value);
					this.SendPropertyChanging();
					this._ADM = value;
					this.SendPropertyChanged("ADM");
					this.OnADMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsUnique=true, IsForeignKey=false)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.TAIKHOAN = null;
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.TAIKHOAN = this;
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONGBAO")]
	public partial class THONGBAO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NOIDUNG;
		
		private bool _MATB;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnMATBChanging(bool value);
    partial void OnMATBChanged();
    #endregion
		
		public THONGBAO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(2000)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
